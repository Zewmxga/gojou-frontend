Yes, the package "@videojs-player/vue" does support HLS. The package is a wrapper around Video.js, a popular video player library that supports HLS playback through the videojs-contrib-hls plugin. The "@videojs-player/vue" package provides a simple integration of Video.js into Vue.js projects, and it can be used to play HLS streams by configuring the player with the appropriate options.

Here's an example of how to use "@videojs-player/vue" to play an HLS stream:

Install the package: npm install @videojs-player/vue videojs-contrib-hls

Import the necessary components in your Vue.js project:

javascript
Copy code
import { Player, VideoJsPlayer } from "@videojs-player/vue";
import "@videojs-contrib-hls";
Use the Player component to create a video player in your Vue.js template:
php
Copy code
<template>
  <Player :options="playerOptions" ref="player">
    <source :src="videoSrc" type="application/x-mpegURL" />
  </Player>
</template>
Define the player options and video source in your Vue.js script:
php
Copy code
<script>
export default {
  components: {
    Player,
  },
  data() {
    return {
      playerOptions: {
        fluid: true,
        autoplay: false,
      },
      videoSrc: "https://example.com/video.m3u8",
    };
  },
};
</script>
In this example, the videoSrc property contains the URL of an HLS stream, and the type attribute of the <source> element is set to application/x-mpegURL to indicate that it's an HLS stream. The playerOptions object contains various options for the player, including fluid: true to make the player responsive to its container size.

With these steps, the Video.js player will be able to play the HLS stream in your Vue.js application.